# Generated by Django 3.2 on 2023-03-31 11:19

import apps.share.validators.user
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Last name')),
                ('old', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(65)], verbose_name='Old')),
                ('education_degree', models.IntegerField(blank=True, choices=[(1, 'Associate'), (2, 'Bachelor'), (3, 'Master'), (4, 'Doctoral')], default=1, null=True, verbose_name='Education Degree')),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, validators=[apps.share.validators.user.NationalCodeValidator()], verbose_name='National code')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, validators=[apps.share.validators.user.MobileValidator()], verbose_name='Mobile')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Skills')),
                ('experiences', models.TextField(blank=True, null=True, verbose_name='Experiences')),
                ('educations', models.TextField(blank=True, null=True, verbose_name='Educations')),
                ('languages', models.TextField(blank=True, null=True, verbose_name='Languages')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female')], default=1, null=True, verbose_name='Sex')),
                ('name_en', models.CharField(blank=True, max_length=128, null=True, verbose_name='English name')),
                ('name_fa', models.CharField(blank=True, max_length=128, null=True, verbose_name='Persian name')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('establishment', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1300), django.core.validators.MaxValueValidator(1403)], verbose_name='Establishment')),
                ('count_type', models.IntegerField(blank=True, choices=[(1, '1-10'), (2, '10-50'), (3, '50-200'), (4, '200-1000'), (5, '+1000')], null=True, verbose_name='Count type')),
                ('username', models.CharField(error_messages={'unique': 'Sorry, this username already token.'}, max_length=150, unique=True, validators=[apps.share.validators.user.UsernameValidator()], verbose_name='Username')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/', verbose_name='Avatar')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='users/banners/', verbose_name='Banner')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('typ', models.IntegerField(choices=[(1, 'Employee'), (2, 'Company')], default=1, verbose_name='Type')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Last login')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Last update')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='StateModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=64, verbose_name='State')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=64, verbose_name='City')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.statemodel', verbose_name='State')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
